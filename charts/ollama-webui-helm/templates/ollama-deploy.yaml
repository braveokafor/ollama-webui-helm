apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-ollama
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "ollama.selectorLabels" . | nindent 6 }}
  {{- if .Values.ollama.updateStrategy }}
  strategy: {{- toYaml .Values.ollama.updateStrategy | nindent 4 }}
  {{- end }}
  {{- if not .Values.ollama.autoscaling.enabled }}
  replicas: {{ .Values.ollama.replicaCount }}
  {{- end }}
  template:
    metadata:
      labels: {{- include "ollama.selectorLabels" . | nindent 8 }}
        {{- if .Values.ollama.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.ollama.podLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
      {{- if .Values.ollama.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.ollama.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "ollama.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.ollama.hostAliases }}
      # yamllint disable rule:indentation
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.ollama.hostAliases "context" $) | nindent 8 }}
      # yamllint enable rule:indentation
      {{- end }}
      {{- if .Values.ollama.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.ollama.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.ollama.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.ollama.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.ollama.nodeAffinityPreset.type "key" .Values.ollama.nodeAffinityPreset.key "values" .Values.ollama.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.ollama.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.ollama.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.ollama.priorityClassName }}
      priorityClassName: {{ .Values.ollama.priorityClassName }}
      {{- end }}
      {{- if .Values.ollama.schedulerName }}
      schedulerName: {{ .Values.ollama.schedulerName | quote }}
      {{- end }}
      {{- if .Values.ollama.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.ollama.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ollama.serviceAccountName" .}}
      {{- if .Values.ollama.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.ollama.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.ollama.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.ollama.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.ollama.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.ollama.initContainers "context" $) | nindent 8 }}
        {{- end }}
      {{- if or .Values.ollama.gpu.enabled .Values.ollama.tolerations }}
      tolerations:
        {{- if .Values.ollama.tolerations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.ollama.tolerations "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.ollama.gpu.enabled }}
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-ollama
          image: {{ include "ollama.image" . }}
          imagePullPolicy: {{ .Values.ollama.image.pullPolicy | quote }}     
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.command }}
          command: {{- include "common.tplvalues.render" ( dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.args }}
          args: {{- include "common.tplvalues.render" ( dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.ollama.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.ollama.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.ollama.gpu.enabled }}
            - name: PATH
              value: /usr/local/nvidia/bin:/usr/local/nvidia/lib64:/usr/bin:/usr/sbin:/bin:/sbin
            - name: LD_LIBRARY_PATH
              value: /usr/local/nvidia/lib64
            {{- end}}          
            {{- if .Values.ollama.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.ollama.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.ollama.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.ollama.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.ollama.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.ollama.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
          - name: http
            containerPort: {{ .Values.ollama.containerPorts.http }}
          {{- if .Values.ollama.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.ollama.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.ollama.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.ollama.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.ollama.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.ollama.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.ollama.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.ollama.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.ollama.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.ollama.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.ollama.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.ollama.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.ollama.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.ollama.startupProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.ollama.resources }}
          resources: 
            {{- $existingLimits := default dict .Values.ollama.resources.limits }}
            {{- $newLimits := $existingLimits }}
            {{- if .Values.ollama.gpu.enabled }}
              {{- $gpuLimit := dict "nvidia.com/gpu" (.Values.ollama.gpu.num | default 1) }}
              {{- $newLimits = merge $existingLimits $gpuLimit }}
            {{- end }}
            {{- $newResources := merge .Values.ollama.resources (dict "limits" $newLimits) }}
            {{- toYaml $newResources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: ollama-data
              mountPath: {{ .Values.ollama.persistence.mountPath }}
              {{- if .Values.ollama.persistence.subPath }}
              subPath: {{ .Values.ollama.persistence.subPath }}
              {{- end }}
            {{- if .Values.ollama.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.ollama.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .Values.ollama.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.ollama.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: ollama-data
          {{- if .Values.ollama.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.ollama.persistence.existingClaim | default (printf "%s-ollama" (include "common.names.fullname" .)) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.ollama.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.ollama.extraVolumes "context" $) | nindent 8 }}
        {{- end }}